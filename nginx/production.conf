http {

#   upstream client {
#   server client:300;
# }

upstream registry {
  server registry:5000;
}
  ## Set a variable to help us decide if we need to add the
  ## 'Docker-Distribution-Api-Version' header.
  ## The registry always sets this header.
  ## In the case of nginx performing auth, the header is unset
  ## since nginx is auth-ing before proxying.
  map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
    '' 'registry/2.0';
  }
server {

  # location / {
  #   proxy_pass http://client;
  # }

  server_name lotusregistry.club  www.lotusregistry.club;

  client_max_body_size 0;
  chunked_transfer_encoding on;
  
   
  #  location /registry {
  #   rewrite /registry/(.*) /$1 break;
  #   proxy_pass http://registry;
 
  # }

  location /v2/ {
          # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
      # if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      #   return 404;
      # }

      # To add basic authentication to v2 use auth_basic setting.
      auth_basic "Registry realm";
      auth_basic_user_file /etc/nginx/conf.d/nginx.htpasswd;

      ## If $docker_distribution_api_version is empty, the header is not added.
      ## See the map directive above where this variable is defined.
      add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

      proxy_pass                          http://registry;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
  }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/lotusregistry.club/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/lotusregistry.club/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    if ($host = www.lotusregistry.club) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = lotusregistry.club) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen 80;

  server_name lotusregistry.club  www.lotusregistry.club;
    return 404; # managed by Certbot




}}
events{
  worker_connections  1024;
}